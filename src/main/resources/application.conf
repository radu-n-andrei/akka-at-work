akka {
    loglevel = DEBUG
    test.single-expect-default = 5000
}

mySpecialConfig {
    akka {
        loglevel = INFO
    }
}

timeboxedConfig {
    akka.test.single-expect-default = 300
}

interception {
    akka {
        loggers = ["akka.testkit.TestEventListener"]
        test {
            filter-leeway = 5s
        }
    }
}

routers-demo {
    akka {
        actor.deployment {
            /pool-parent-2 {
                router = round-robin-pool
                nr-of-instances = 5
            }
            /group-parent-2 {
                router = round-robin-group
                routees.paths = ["/user/child-outer-1", "/user/child-outer-2", "/user/child-outer-3", "/user/child-outer-4", "/user/child-outer-5"]
            }
        }
    }
}

dispatcher-demo {
    my-dispatcher {
        type = Dispatcher # PinnedDispatchers, CallingThreadDispatcher
        executor = "thread-pool-executor"
        thread-pool-executor {
            fixed-pool-size = 3
        }
        throughput = 30
    }
    akka.actor.deployment {
        /second-dispatcher {
            dispatcher = "my-dispatcher"
        }
    }
}

mailboxes-demo {
    mailbox-dispatcher {
            mailbox-type = "akka.actors.infra.Mailboxes$SupportTicketPriorityMailbox"
        }
    control-mailbox {
        mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
    }
    akka.actor.deployment {
        /control-aware-actor {
            mailbox = "control-mailbox"
        }
    }
}

dedicated-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
        fixed-pool-size = 5
    }
}